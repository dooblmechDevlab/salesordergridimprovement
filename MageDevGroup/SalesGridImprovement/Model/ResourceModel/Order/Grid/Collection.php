<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
namespace MageDevGroup\SalesGridImprovement\Model\ResourceModel\Order\Grid;

use MageDevGroup\SalesGridImprovement\Model\TmpTableProvider;
use Magento\Framework\Data\Collection\Db\FetchStrategyInterface as FetchStrategy;
use Magento\Framework\Data\Collection\EntityFactoryInterface as EntityFactory;
use Magento\Framework\DB\Select;
use Magento\Framework\DB\Sql\Expression;
use Magento\Framework\Event\ManagerInterface as EventManager;
use Psr\Log\LoggerInterface as Logger;

/**
 * Order grid collection
 */
class Collection extends \Magento\Sales\Model\ResourceModel\Order\Grid\Collection
{
    /**
     * @var null
     */
    private $productSkuFilter = null;

    /**
     * @return Collection
     */
    protected function _beforeLoad()
    {
        //We are joining sales_order_item table
        //And selecting product sku and name from there, with field product_sku
        $this->getSelect()->join(
            ['soi' => 'sales_order_item'],
            'main_table.entity_id = soi.order_id',
            new Expression('GROUP_CONCAT(DISTINCT sku, " / ", name) AS product_sku ')
        );

        if ($this->productSkuFilter !== null) {
            parent::addFieldToFilter('product_sku', $this->productSkuFilter);
        }

        return parent::_beforeLoad();
    }

    /**
     * As product_sku is virtual field, that will be created as a result of GROUP_CONCAT,
     * we need to do not apply it instantly, but better to apply it directly during before_load
     *
     * @param $field
     * @param null $condition
     * @return $this
     */
    public function addFieldToFilter($field, $condition = null)
    {
        if ($field !== 'product_sku') {
            return parent::addFieldToFilter($field, $condition); // TODO: Change the autogenerated stub
        }

        $this->productSkuFilter = $condition;
        return $this;
    }
}
